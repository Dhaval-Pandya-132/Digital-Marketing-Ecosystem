/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ProductManagerRole;

import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.marketAnalystOrganization;
import Business.Organization.productAnalystOrganization;
import Business.Organization.productManagerOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import Business.WorkQueue.productDetailWorkRequest;
import Business.WorkQueue.productRiskAnalysis;
import java.awt.CardLayout;
//import java.sql.Date;
import java.util.Date;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author dhava
 */
public class productManagerCreateTask extends javax.swing.JPanel {

    /**
     * Creates new form productManagerCreateTask
     */
    
  // private static final DateFormat df = new SimpleDateFormat("yyyy/mm/dd"); 
   JPanel userProcessContainer;
   UserAccount account;
   //productManagerOrganization  organization;
    Enterprise enterprise;
    productDetailWorkRequest request ;
    Boolean isupdate=false;        
    public productManagerCreateTask(JPanel userProcessContainer,UserAccount account,Enterprise enterprise,WorkRequest request) throws ParseException {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.account=account;
        this.enterprise=enterprise;
        if (request==null)
        {
            
            this.request=new productDetailWorkRequest();
            txtTaskID.setText(this.request.getTaskID());
        }
        else
        {
            this.request=(productDetailWorkRequest)request;
            setValues();
            
            isupdate=true;
        }
        
        
        populateEmployeeComboBox();
       // populatestatusComboBox();
        Lodadatepicker();
    }
    
    
    public void setValues() throws ParseException
    {
         
         DateFormat dateFormat = new SimpleDateFormat("MM-dd-yyyy");
         String duedate=dateFormat.format(request.getDuedate());
         //String duedate=dt.toString();
          
        String Final=String.valueOf(duedate.substring(3,5))+"/"+ String.valueOf(duedate.substring(0,2))+"/"+ String.valueOf(duedate.substring(6,10) );
          
          
        txtTaskID.setText(request.getTaskID());
        txttitle.setText(request.getTitle());
        txtdescription.setText(request.getDescription());
        ddlassignto.setSelectedItem(request.getAssignto());
        txtduedate.setValue(Final);
        

// request.set(txttitle.getText());
       // request.setTitle(txttitle.getText());
        //request.setTitle(txttitle.getText());
         request.setSender(account);
//        request.setStatus("Task Created");
        
    
    }
    
    public void Lodadatepicker()
    {
       txtduedate.setColumns(20);
         
        //panel.add(tf);
        try {
            MaskFormatter dateMask = new MaskFormatter("##/##/####");
            dateMask.install(txtduedate);
//            dateMask.install(txtmanufecturedate);
        } catch (ParseException ex) {
                return;
//Logger.getLogger(MaskFormatter.class.getName()).log(Level.SEVERE, null, ex);
        }}
    

    
      public void populateEmployeeComboBox(){
        ddlassignto.removeAllItems();
        
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
          
            for (Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
            
                if (! employee.getName().equals(account.getEmployee().getName()) )
                       {  ddlassignto.addItem(employee);}
            }  
        }
    }
//
//    public void populatestatusComboBox(){
//        ddlstatus.removeAllItems();
//        for(WorkRequest.Workstatus  status:WorkRequest.Workstatus.values())
//        {
//            ddlstatus.addItem(status);
//        }
//       
//    }  
//      
      
      
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txttitle = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtdescription = new javax.swing.JTextArea();
        btnSave = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ddlassignto = new javax.swing.JComboBox();
        btnBack = new javax.swing.JButton();
        txtduedate = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTaskID = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1000, 800));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setText("Description:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, 120, 30));

        jLabel6.setText("Title :");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 270, 120, 30));
        add(txttitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 270, 240, 30));

        txtdescription.setColumns(20);
        txtdescription.setRows(5);
        jScrollPane1.setViewportView(txtdescription);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 330, 238, -1));

        btnSave.setBackground(new java.awt.Color(0, 153, 255));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 610, 150, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Create Task");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, 268, 70));

        jLabel7.setText("Due Date :");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 500, 120, 30));

        jLabel9.setText("Assign To:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 440, 120, 30));

        ddlassignto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(ddlassignto, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 440, 240, 30));

        btnBack.setBackground(new java.awt.Color(255, 255, 255));
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Double Left_100px.png"))); // NOI18N
        btnBack.setToolTipText("Back");
        btnBack.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        btnBack.setBorderPainted(false);
        btnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBackMouseExited(evt);
            }
        });
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 580, 105, 76));
        add(txtduedate, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 500, 240, 40));

        jLabel2.setText("dd/mm/yyyy");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 500, 180, 40));

        jLabel3.setText("Task ID :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, -1, -1));

        txtTaskID.setEnabled(false);
        add(txtTaskID, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 210, 240, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
       
        if(txtTaskID.getText().equals("")||txtdescription.getText().equals("")||txtduedate.getText().equals("")|| txttitle.getText().equals(""))
        {
           JOptionPane.showMessageDialog(null, "One or more fields are empty..");
           return;
            
        }
        try {
           // TODO add your handling code here:
           //Enterprise enterprise = (Enterprise) enterpriseJComboBox.getSelectedItem();
           
           // String message = messageJTextField.getText();
        CreateTask();
        
        
        
        
       } catch (ParseException ex) {
           JOptionPane.showMessageDialog(null, "Please Insert Valid Due date!!");
// Logger.getLogger(productManagerCreateTask.class.getName()).log(Level.SEVERE, null, ex);
       }
    }//GEN-LAST:event_btnSaveActionPerformed

    public void CreateTask() throws ParseException
    {
      // DateTimeComparator dateTimeComparator = DateTimeComparator.getDateOnlyInstance();

       java.util.Date dt= new SimpleDateFormat("dd/MM/yyyy").parse(txtduedate.getText());
        Date date = new Date();
       
      // LocalDate  dt2=dt.toLocalDate();
        
       if (dt.after(date) || dt.compareTo(date)==0)
       {
       
        request.setTaskID(txtTaskID.getText());
        request.setTitle(txttitle.getText());
        request.setDescription(txttitle.getText());
        request.setDuedate(dt);
        request.setAssignto((Employee)ddlassignto.getSelectedItem());

// request.set(txttitle.getText());
       // request.setTitle(txttitle.getText());
        //request.setTitle(txttitle.getText());
        request.setSender(account);
        request.setPdw(request);
        if (!isupdate)
        {
            request.setStatus("Task Created");
            Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof productAnalystOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
           // org.getWorkQueue().getProductDetailWorkRequestList().add(request);
            account.getWorkQueue().getWorkRequestList().add(request);
             
        }
        
        
        
            JOptionPane.showMessageDialog(null, "Request Created successfully..!!");
     
            
            
        }//request.setStatus(ddlstatus.getSelectedItem().toString());
        else
        {
            JOptionPane.showMessageDialog(null, "Request Updated successfully..!!");
     
        
        }
        
        
       }else
       {
            JOptionPane.showMessageDialog(null, "Make sure due date is greater than Today");
            return;
       }
        
    }
    
    
    private void btnBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseEntered
        // TODO add your handling code here:

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Double Left_100px2.png")));
        btnBack.setBorderPainted(false);
    }//GEN-LAST:event_btnBackMouseEntered

    private void btnBackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseExited
        // TODO add your handling code here:
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Double Left_100px.png")));
    }//GEN-LAST:event_btnBackMouseExited

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox ddlassignto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtTaskID;
    private javax.swing.JTextArea txtdescription;
    private javax.swing.JFormattedTextField txtduedate;
    private javax.swing.JTextField txttitle;
    // End of variables declaration//GEN-END:variables
}
