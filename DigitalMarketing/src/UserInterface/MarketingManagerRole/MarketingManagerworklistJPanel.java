/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.MarketingManagerRole;

import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.marketAnalystOrganization;
import Business.Organization.productAnalystOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import Business.WorkQueue.productDetailWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dhava
 */
public class MarketingManagerworklistJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MarketingManagerworklistJPanel
     */
   JPanel userProcessContainer;
   UserAccount account;
   Enterprise enterprise;
    
    public MarketingManagerworklistJPanel(JPanel userProcessContainer,UserAccount account ,Enterprise enterprise) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.account=account;
        this.enterprise=enterprise;
        populateRequestTable();
        populateEmployeeComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) tbltasklist.getModel();
        
        model.setRowCount(0);
        
        for (Organization o :enterprise.getOrganizationDirectory().getOrganizationList()) {
            for (WorkRequest request :o.getWorkQueue().getWorkRequestList())
            {  
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getTaskID();
            row[2] = request.getPdw().getProductName();//request.
            row[3] = request.getStatus();         
             
         //   request.
          //  row[1] = ()request.;
          //  row[2] = o.;
          //  row[3] = request.getDuedate();
                
                
                model.addRow(row);
            }
        }
        
       
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbltasklist = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        ddlassignto = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1000, 800));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tbltasklist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "TaskID", "ProductName", "Status"
            }
        ));
        jScrollPane1.setViewportView(tbltasklist);
        if (tbltasklist.getColumnModel().getColumnCount() > 0) {
            tbltasklist.getColumnModel().getColumn(0).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 290, 780, 219));

        btnSave.setBackground(new java.awt.Color(0, 153, 255));
        btnSave.setText("Assign");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 220, 150, -1));

        ddlassignto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(ddlassignto, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, 240, 30));

        jLabel9.setText("Assign To:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, 120, 30));

        btnBack.setBackground(new java.awt.Color(255, 255, 255));
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Double Left_100px.png"))); // NOI18N
        btnBack.setToolTipText("Back");
        btnBack.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        btnBack.setBorderPainted(false);
        btnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBackMouseExited(evt);
            }
        });
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 580, 105, 76));
    }// </editor-fold>//GEN-END:initComponents

    
    
    public productDetailWorkRequest getRequest(String Taskid)
    {
        productDetailWorkRequest productDetailWorkRequest=null;
             for (Organization o :enterprise.getOrganizationDirectory().getOrganizationList()) {
            for (productDetailWorkRequest request :o.getWorkQueue().getProductDetailWorkRequestList())
            {  
            
                if(request.getTaskID().equals(Taskid))
                {
                   productDetailWorkRequest=request;
                }
               
                
            }
             }
            
            return productDetailWorkRequest;
    }
    
    
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        //Enterprise enterprise = (Enterprise) enterpriseJComboBox.getSelectedItem();

        
        
        
        int selectedRow=tbltasklist.getSelectedRow();
        if (selectedRow>=0)
        {

            
                productDetailWorkRequest request=(productDetailWorkRequest)tbltasklist.getValueAt(selectedRow,0);
                request.setAssignto((Employee)ddlassignto.getSelectedItem());
                
                request.setStatus("Assign to Market Analyst");
                
                 Organization org = null;
                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                    if (organization instanceof marketAnalystOrganization){
                        org = organization;
                        break;
                    }
                }
                        if (org!=null){
                
                        for (WorkRequest wr:org.getWorkQueue().getWorkRequestList())
                            {
                                if (wr.getTaskID().equals(request.getTaskID()))
                                {
                                 request.setAssignto(account.getEmployee());
                                }
                            }
                            
                    //    org.getWorkQueue().getWorkRequestList().add(request);
                     //   account.getWorkQueue().getWorkRequestList().add(request);
                        //org.getWorkQueue().getProductDetailWorkRequestList().add(request);
                        //account.getWorkQueue().getProductDetailWorkRequestList().add(request);
                    }

        
                  JOptionPane.showMessageDialog(null, "Task Assign to "+ddlassignto.getSelectedItem().toString());
     
       populateRequestTable();
         

        }
        else
        {
            JOptionPane.showMessageDialog(null, "Pleases select Row ");
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseEntered
        // TODO add your handling code here:

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Double Left_100px2.png")));
        btnBack.setBorderPainted(false);
    }//GEN-LAST:event_btnBackMouseEntered

    private void btnBackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseExited
        // TODO add your handling code here:
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Double Left_100px.png")));
    }//GEN-LAST:event_btnBackMouseExited

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed
 public void populateEmployeeComboBox(){
        ddlassignto.removeAllItems();
        
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
          
            for (Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
            
                if (! employee.getName().equals(account.getEmployee().getName()) )
                       {  ddlassignto.addItem(employee);}
            }  
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox ddlassignto;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbltasklist;
    // End of variables declaration//GEN-END:variables
}
